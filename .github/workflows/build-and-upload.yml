name: Build and Upload Electron App

on:
  push:
    branches:
      - main
    paths:
      - "windows/**" 
      - ".github/workflows/**" 

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Enable multiarch and install wine32
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -y wine32 wine64 xvfb  # Install wine32 and xvfb for GUI handling

      - name: Start virtual framebuffer
        run: Xvfb :1 & export DISPLAY=:1 # Start X virtual framebuffer

      - name: Install dependencies
        run: |
          pwd  # Log directory to confirm we're in the correct location
          npm install
        working-directory: ./windows # Set working directory to windows folder

      - name: Build Electron App
        run: |
          pwd  # Log directory to confirm location
          npm run build-windows  # Run the Electron build command for Windows
        working-directory: ./windows

      - name: Locate .exe File
        id: locate-exe
        run: |
          # Find .exe file in the dist folder and save the path to an environment variable
          exe_file=$(find ./dist -maxdepth 1 -name "*.exe" | head -n 1)
          if [ -n "$exe_file" ]; then
            echo "::set-output name=exe_path::$exe_file"
          else
            echo "No .exe files found at the root of dist directory."
            exit 1
          fi
        working-directory: ./windows

      - name: Log .exe Path for Debugging
        run: |
          echo "Found .exe file at: ${{ steps.locate-exe.outputs.exe_path }}"

      - name: Upload .exe to Vercel Blob Storage
        env:
          VERCEL_ACCESS_TOKEN: "d1KwMGvFkdIhDeDuWgr72I1x"
          VERCEL_BLOB_STORAGE_ID: "store_UdTn2J4Itnr2FeH4" 
        run: |
          curl -X POST "https://api.vercel.com/v1/storage/${{ secrets.VERCEL_PROJECT_ID }}/files" \
          -H "Authorization: Bearer ${{ secrets.VERCEL_ACCESS_TOKEN }}" \
          -H "Content-Type: application/octet-stream" \
          -F "file=@${{ steps.locate-exe.outputs.exe_path }}"
        working-directory: ./windows
